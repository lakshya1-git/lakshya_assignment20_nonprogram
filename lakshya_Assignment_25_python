1) . What is the difference between enclosing a list comprehension in square brackets and parentheses?
2) What is the relationship between generators and iterators?
3) What are the signs that a function is a generator function?
4) What is the purpose of a yield statement?
5) What is the relationship between map calls and list comprehensions? Make a comparison and contrast between the two.


Answer1: The difference is that a generator is defined using parentheses, while list comprehensions are defined using square brackets.

Answer2: Iterators are primarily used to iterate through other objects or convert them to iterators using the iter() method. Generators are commonly used in loops to create an iterator by returning all the data without impacting the loop's iteration. Iterator makes use of the iter() and next() methods.

Answer3:
These are the signs that a function is a generator function:

1. Use of the yield keyword: The most prominent sign is the presence of the yield keyword in the function body. A generator function uses yield to produce a sequence of values or a stream of data.

2. Use of the yield statement multiple times: While a generator function can have just one yield statement, it often has multiple yield statements to generate a series of values. Each yield statement produces a value and temporarily suspends the function's execution until the next value is requested.

3. Return type is a generator object: When calling a generator function, it returns a generator object rather than directly executing the function's code. This generator object can be iterated over to obtain the values produced by the yield statements.

4. Lazy evaluation: Generators use lazy evaluation, which means they generate values on-demand as they are requested. Unlike normal functions, which calculate and return all values at once, generators produce values one at a time, reducing memory consumption and allowing for efficient processing of large data sets or infinite sequences.

5. Stateful nature: Generator functions maintain their internal state between yield statements, allowing them to resume execution from where they left off. This enables generators to remember the previous state and continue generating the next value when iterated over again.


Answer4:  
The yield keyword in Python controls the flow of a generator function. This is similar to a return statement used for returning values in Python.


Answer5:  When you enclose a list comprehension in square brackets, it creates a list. The result is a new list object that contains the elements generated by the list comprehension.

And when you enclose a list comprehension in parentheses, it creates a generator expression. The result is a generator object, which is an iterable that produces values on-demand using lazy evaluation.




